######################################## 基本配置 #########################################
# 参数clientPort无默认值，必需配置，不支持系统属性方式配置（如 -Djava.library.path=/usr/local/jdk/lib）
# 参数clientPort用于配置当前服务器对外的服务端口，客户端会通过该端口和ZooKepper服务器创建连接，一般设置为2181
clientPort 2186

# 监听客户端使用SSL连接的端口
secureClientPort 22186

# 参数dataDir无默认值，必须配置，不支持系统属性方式配置
# 参数dataDir用于配置ZooKeeper服务器存储快照文件的目录。默认情况下，如果没有配置dataLogDir参数，那么事务日志也会存储在这个目录中。
# 考虑到事务日志的写性能直接影响ZooKeeper整体的服务能力，因此建议同时通过参数dataLogDir来配置ZooKeeper事务日志的存储目录。
dataDir /data/zookeeper

# 参数tickTime的默认值为3000，单位是毫秒，可以不配置，不支持系统属性方式配置。
# 参数tickTime用于配置ZooKeeper中最小时间单元的长度，很多运行时时间间隔都是使用tickTime的倍数来表示的，例如，ZooKeeper中会话的最小超时时间默认是2*tickTime。
# tickTime 3000

######################################## 高级配置 #########################################
# 参数dataLogDir的默认值为参数dataDir指定的目录，可以不配置，不支持系统属性方式配置。
# 参数dataLogDir用于配置ZooKeeper服务器存储事务日志文件的目录。
# 默认情况下，ZooKeeper会将事务日志文件和快照数据存储在同一个目录中，应该尽量将这两个目录区分开来，并且最好将事务日志的存储配置在一个单独的磁盘上。
# 事务日志记录对于磁盘的性能要求非常高，为了保证数据的一致性，ZooKeeper在返回客户端事务请求的响应之前，必须将本次请求对应的事务日志写入到磁盘中。
# 因此，事务日志写入的性能直接决定了ZooKeeper在处理事务请求时的吞吐。
# dataLogDir /data/zookeeper

# 参数initLimit的默认值为10，即表示10个tickTime。不支持系统属性方式配置。
# 参数initLimit用于配置Leader服务器等待Follower启动，并完成数据同步的时间。Follower服务器在启动过程中，会与Leader建立连接并完成对数据的同步，从而确定自己对外提供服务的起始状态。
# Leader服务器允许Follower在initLimit时间内完成该工作。
# 通常情况下不用太在意这个参数的配置，使用其默认值即可。
# 但如果随着ZooKeeper集群管理的数据量增大，Follower服务器在启动的时候，从Leader上进行数据同步的时间也会相应边长，于是无法在较短的时间内完成数据同步。
# 因此在这种情况下，有必要适当调大这个参数。
# initLimit 10

# 参数syncLimit的默认值为5，即表示5个tickTime。该参数的值必须是一个正整数，不支持系统属性方式配置。
# 参数syncLimit用于配置Leader服务器和Follower之间进行心跳检测的最大延时时间。
# 在ZooKeeper集群运行过程中，Leader服务器会与所有的Follower进行心跳检测来确定该服务器是否存活。
# 如果Leader服务器在syncLimit时间内无法获取到Follower的心跳检测响应，那么Leader就会认为该Follower已经脱离了和自己的同步
# syncLimit 5

# 参数snapCount的默认值为10000，支持通过系统属性"zookeeper.snapCount"进行设置
# 参数snapCount用于配置相邻两次数据快照之间的事务操作次数，即ZooKeeper会在snapCount次事务操作之后进行一次数据快照。
# snapCount 10000

# 参数preAllocSize的默认值为65536，单位为KB，即64M。支持通过系统属性"zookeeper.preAllocSize"进行设置
# 参数preAllocSize用于配置ZooKeeper事务日志文件预分配的磁盘空间大小。之所以对事务日志文件预分配磁盘空间，是为了为事务日志文件分配连续的磁盘空间，避免写入事务日志时磁盘频繁的seek，从而影响写入性能。
# 参数preAllocSize的值的设置一般需要考虑参数snapCount参数的设置，最好预分配的磁盘空间可以写入snapCount个事务日志，这样通过数据快照文件加上一个事务日志文件就可以恢复ZooKeeper的完整数据了。
# 所以当snapCount参数调大或调小的时候也需要相应调大或调小preAllocSize参数
# preAllocSize 65536

# 参数minSessionTimeout和maxSessionTimeout的默认值分别是2和20，表示2*tickTime和20*tickTime，不支持系统属性方式配置。
# 参数minSessionTimeout和maxSessionTimeout用于设置服务端对客户端会话的超时时间限制，如果客户端设置的超时时间不在该范围内，那么会被服务端强制设置为最大或最小超时时间
# minSessionTimeout 2
# maxSessionTimeout 20

# 参数maxClientCnxns的默认值为60（在3.4.0版本以前的默认值为10），不支持系统属性方式配置
# 参数maxClientCnxns用于从Socket层面限制单个客户端与单台服务器之间的并发连接数，即以IP地址粒度来进行连接数的限制。
# 如果设置为0，表示对连接数不做任何限制。
# maxClientCnxns 60

# 参数jute.maxbuffer的默认值为1048575，单位为字节。支持通过系统属性"jute.maxbuffer"进行设置
# 参数jute.maxbuffer用于配置单个数据节点（ZNode）上可以存储的最大数据量大小。
# 因为ZooKeeper上不以存储太多的数据，所以该参数的值不以设置的过大，建议比默认值设置的更小。
# 注意：在变更该参数的时候，需要在ZooKeeper集群的所有机器以及所有的客户端上均设置才能生效。
# jute.maxbuffer 1048575

# 参数clientPortAddress没有默认值，可以不配置，不支持系统属性方式配置。
# 参数clientPortAddress是针对多网卡的机器，该参数允许为每个IP地址指定不同的监听端口
# clientPortAddress 

# 参数server.id没有默认值，在单机模式下不可配置，不支持系统属性方式配置。
# 参数server.id用于配置组成ZooKeeper集群的机器列表，其中id为ServerID，与集群中每台服务器myid文件中的数字相对应。
# 参数server.id的值的格式为"host:port1:port2"，
# 其中host为集群服务器的IP地址；port1和port2为两个端口号，其中port1用于指定Follower服务器与Leader进行运行时通信和数据同步时所使用的的端口，port2专门用于进行Leader选举过程中的投票通信
# 如下所示，设置了一个有3台服务器的集群，其中，服务器1的IP地址为192.168.0.100，且该服务器上的ZooKeeper服务的myid文件内容为"1"，指定的端口号分别为2777和3777
# server.1=192.168.0.100:2777:3777
# server.2=192.168.0.101:2777:3777
# server.3=192.168.0.102:2777:3777

# 参数autopurge.snapRetainCount的默认值为3，ZooKeeper从3.4.0版本开始支持该参数。不支持系统属性方式配置
# 参数autopurge.snapRetainCount用于配置ZooKeeper在自动清理历史事务日志和快照数据时需要保留的快照数据文件数量和对应的事务日志文件。
# 参数autopurge.snapRetainCount的最小值是3，如果配置的值比3小，ZooKeeper会自动调整该值为3，因为再小的值将导致ZooKeeper可能无法恢复数据。
# autopurge.snapRetainCount 3

# 参数autopurge.purgeInterval的默认值为0，单位为小时，不支持系统属性方式配置。
# 参数autopurge.purgeInterval和参数autopurge.snapRetainCount配套使用，用于配置ZooKeeper进行历史文件自动清理的频率。
# 如果该参数的值为0或负数，那么就表明不需要开启定时清理功能。ZooKeeper默认不开启这项功能
# autopurge.purgeInterval 0

# 参数fsync.warningthresholdms的默认值为1000，单位是毫秒。支持通过系统属性"fsync.warningthresholdms"进行配置
# 参数fsync.warningthresholdms用于配置ZooKeeper进行事务日志fsync操作时消耗时间的报警阈值。一旦进行一个fsync操作消耗的时间超过参数fsync.warningthresholdms指定值，就会在日志中打印出报警日志
# fsync.warningthresholdms 1000

# 参数forceSync的默认值为yes，可选择的值为"yes"和"no"，支持通过系统属性"zookeeper.forceSync"进行设置。
# 参数forceSync用于配置ZooKeeper服务器是否在试图提交的时候，将日志写入操作强制刷入磁盘，默认情况下是yes，即每次事务日志写入操作都会实时刷入磁盘。
# 如果将其设置为no，则能一定程度的提高ZooKeeper的写性能，但同时也会存在丢失数据的风险（比如还未刷入磁盘机器突然断电）
# forceSync yes

# 参数globalOutstandingLimit的默认值为1000，支持通过系统属性"zookeeper.globalOutstandingLimit"进行设置。
# 参数globalOutstandingLimit用于配置ZooKeeper服务器最大请求堆积数量。在ZooKeepr服务器运行过程中，客户端会源源不断的将请求发送到服务端，为了防止服务端资源耗尽，服务端必须限制同时处理的请求数。
# globalOutstandingLimit 1000

# 参数leaderServes的默认值为yes，可选的值为"yes"和"no"，支持通过系统属性"zookeeper.leaderServes"进行设置。
# 参数leaderServes用于配置Leader服务器是否能够接受客户端的连接，即是否允许Leader向客户端提供服务，默认情况下，Leader服务器能够接受并处理客户端的所有读写请求。
# 在ZooKeeper的架构设计中，Leader服务器主要用来进行对事物更新请求的协调以及集群本身的运行时协调，因此，可以设置让Leader服务器不接受客户端的连接，以使其专注于进行分布式协调。
# leaderServes yes

# 参数skipAcl的默认值为no，可选的值为"yes"和"no"，支持通过系统属性"zookeeper.skipAcl"进行设置
# 参数skipAcl用于配置ZooKeeper服务器是否跳过ACL权限检查，默认情况下是no，即会对每一个客户端请求进行权限检查。
# 如果将其值设置为"yes"，则能一定程度的提高ZooKeeper的读写性能。
# skipAcl no

# 参数cnxTimeout的默认值为5000，单位是毫秒。支持通过系统属性"zookeeper.cnxTimeout"进行设置。
# 参数cnxTimeout用于配置ZooKeeper在Leader选举过程中，各服务器之间进行TCP连接创建的超时时间。
# cnxTimeout 5000

# 参数electionAlg用于配置ZooKeeper的Leader选举算法。在3.4.0版本之前ZooKeeper提供了几种可选的Leader选举算法，但从3.4.0版本开始，ZooKeeper废弃了其他选举算法，只留下了FastLeaderElection算法
# 因此该参数现在已经没有用了
# electionAlg 

