【bash环境中的通配符】

* 		代表“ 0 个到无穷多个”任意字符
? 		代表“一定有一个”任意字符
[ ] 	同样代表“一定有一个在括号内”的字符。例如 [abcd] 代表“一定有一个字符， 可能是 a, b, c, d 这四个任何一个”
[-]		若有减号在中括号内时，代表“在编码顺序内的所有字符”。例如 [0-9] 代表 0 到 9 之间的所有数字，因为数字的语系编码是连续的！
[^]		表示“反向选择”，例如 [^abc] 代表一定有一个非 a, b, c字符。



【bash环境中的特殊字符】

# 	注解符号：这个最常被使用在 script 当中，视为说明！在后的数据均不执行
\ 	跳脱符号：将“特殊字符或万用字符”还原成一般字符
| 	管线 （pipe）：分隔两个管线命令的界定；
; 	连续指令下达分隔符号：连续性命令的界定 （注意！与管线命令并不相同）
~ 	使用者的主文件夹
$ 	取用变量前置字符：亦即是变量之前需要加的变量取代值
& 	工作控制 （job control）：将指令变成背景下工作
! 	逻辑运算意义上的“非” not 的意思！
/ 	目录符号：路径分隔的符号
>, >> 	数据流重导向：输出导向，分别是“取代”与“累加”
<, << 	数据流重导向：输入导向 （这两个留待下节介绍）
' ' 	单引号，不具有变量置换的功能 （$ 变为纯文本）
" " 	具有变量置换的功能！ （$ 可保留相关功能）两个“ `”中间为可以先执行的指令，亦可使用 $（ ）
（ ） 在中间为子 shell 的起始与结束
{ } 在中间为命令区块的组合！